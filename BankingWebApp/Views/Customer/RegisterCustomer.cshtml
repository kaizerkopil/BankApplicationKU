@model CustomerViewModel
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{

    ViewData["Title"] = "Register Customer";
}

@using (Html.BeginForm("RegisterCustomer", "Customer", FormMethod.Post))
{
    <div class="container mt-5 pt-lg-4">
        <div class="card">
            <div class="card-header bg-transparent">
                <p class="fs-2 fw-light">Registration Form</p>
            </div>
            <div class="card-body row gap-3">
                <div class="row mx-auto">
                    <div class="row gap-1 gap-lg-0">
                        <div class="col-12 col-lg-3">@Html.DisplayNameFor(m => m.Customer!.FirstName) </div>
                        <div class="col-12 col-lg-6">@Html.TextBoxFor(m => m.Customer!.FirstName, new { @class = "form-control", @type = "text" })</div>
                    </div>
                    @if (@Model.InvalidPropNames!.Contains("FirstName"))
                    {
                        <div class="row mt-1">
                            <div class="d-none d-lg-block col-lg-3"></div>
                            <div class="col-12 col-lg-6"><i class="bi bi-exclamation-circle me-2"></i>@Html.ValidationMessageFor(m => m.Customer!.FirstName)</div>
                        </div>
                    }
                </div>

                <div class="row mx-auto">
                    <div class="row gap-1 gap-lg-0">
                        <div class="col-12 col-lg-3">@Html.DisplayNameFor(m => m.Customer!.LastName) </div>
                        <div class="col-12 col-lg-6">@Html.TextBoxFor(m => m.Customer!.LastName, new { @class = "form-control", @type = "text" })</div>
                    </div>
                    @if (@Model.InvalidPropNames!.Contains("LastName"))
                    {
                        <div class="row mt-1">
                        <div class="d-none d-lg-block col-lg-3"></div>
                            <div class="col-12 col-lg-6"><i class="bi bi-exclamation-circle me-2"></i>@Html.ValidationMessageFor(m => m.Customer!.LastName)</div>
                    </div>
                    }
                </div>

                <div class="row mx-auto">
                    <div class="row gap-1 gap-lg-0">
                        <div class="col-12 col-lg-3">@Html.DisplayNameFor(m => m.Customer!.EmailAddress) </div>
                        <div class="col-12 col-lg-6">@Html.TextBoxFor(m => m.Customer!.EmailAddress, new { @class = "form-control", @type = "email" })</div>
                    </div>
                    @if (@Model.InvalidPropNames!.Contains("EmailAddress"))
                    {
                    <div class="row mt-1">
                        <div class="d-none d-lg-block col-lg-3"></div>
                        <div class="col-12 col-lg-6"><i class="bi bi-exclamation-circle me-2"></i>@Html.ValidationMessageFor(m => m.Customer!.EmailAddress)</div>
                    </div>
                    }
                </div>

                <div class="row mx-auto">
                    <div class="row gap-1 gap-lg-0">
                        <div class="col-12 col-lg-3">@Html.DisplayNameFor(m => m.Customer!.Password) </div>
                        <div class="col-12 col-lg-6">@Html.TextBoxFor(m => m.Customer!.Password, new { @class = "form-control", @type = "password" })</div>
                    </div>
                    @if (@Model.InvalidPropNames!.Contains("Password"))
                    {
                        <div class="row mt-1">
                            <div class="d-none d-lg-block col-lg-3"></div>
                            <div class="col-12 col-lg-6"><i class="bi bi-exclamation-circle me-2"></i>@Html.ValidationMessageFor(m => m.Customer!.Password)</div>
                        </div>
                    }
                </div>

                <div class="row mx-auto">
                    <div class="row gap-1 gap-lg-0">
                        <div class="col-12 col-lg-3">@Html.DisplayNameFor(m => m.Customer!.ConfirmPassword) </div>
                        <div class="col-12 col-lg-6">@Html.TextBoxFor(m => m.Customer!.ConfirmPassword, new { @class = "form-control", @type = "password" })</div>
                    </div>
                    @if (@Model.InvalidPropNames!.Contains("ConfirmPassword"))
                    {
                        <div class="row mt-1">
                            <div class="d-none d-lg-block col-lg-3"></div>
                            <div class="col-12 col-lg-6"><i class="bi bi-exclamation-circle me-2"></i>@Html.ValidationMessageFor(m => m.Customer!.ConfirmPassword)</div>
                        </div>
                    }
                </div>

                <div class="row mx-auto">
                    <div class="row gap-1 gap-lg-0">
                        <div class="col-12 col-lg-3">@Html.DisplayNameFor(m => m.Customer!.StreetAddress) </div>
                        <div class="col-12 col-lg-6">@Html.TextBoxFor(m => m.Customer!.StreetAddress, new { @class = "form-control", @type = "text" })</div>
                    </div>
                    @if (@Model.InvalidPropNames!.Contains("StreetAddress"))
                    {
                        <div class="row mt-1">
                            <div class="d-none d-lg-block col-lg-3"></div>
                            <div class="col-12 col-lg-6"><i class="bi bi-exclamation-circle me-2"></i>@Html.ValidationMessageFor(m => m.Customer!.StreetAddress)</div>
                        </div>
                    }
                </div>

                <div class="row mx-auto">
                    <div class="row gap-1 gap-lg-0">
                        <div class="col-12 col-lg-3">@Html.DisplayNameFor(m => m.Customer!.City) </div>
                        <div class="col-12 col-lg-6">@Html.TextBoxFor(m => m.Customer!.City, new { @class = "form-control", @type = "text" })</div>
                    </div>
                    @if (@Model.InvalidPropNames!.Contains("City"))
                    {
                        <div class="row mt-1">
                            <div class="d-none d-lg-block col-lg-3"></div>
                            <div class="col-12 col-lg-6"><i class="bi bi-exclamation-circle me-2"></i>@Html.ValidationMessageFor(m => m.Customer!.City)</div>
                        </div>
                    }
                </div>

                <div class="row mx-auto">
                    <div class="row gap-1 gap-lg-0">
                        <div class="col-12 col-lg-3">@Html.DisplayNameFor(m => m.Customer!.PostCode) </div>
                        <div class="col-12 col-lg-6">@Html.TextBoxFor(m => m.Customer!.PostCode, new { @class = "form-control", @type = "text" })</div>
                    </div>
                    @if (@Model.InvalidPropNames!.Contains("PostCode"))
                    {
                        <div class="row mt-1">
                            <div class="d-none d-lg-block col-lg-3"></div>
                            <div class="col-12 col-lg-6"><i class="bi bi-exclamation-circle me-2"></i>@Html.ValidationMessageFor(m => m.Customer!.PostCode)</div>
                        </div>
                    }
                </div>

                <div class="row mx-auto">
                    <div class="row gap-1 gap-lg-0">
                        <div class="col-12 col-lg-3">@Html.DisplayNameFor(m => m.Customer!.Phonenum) </div>
                        <div class="col-12 col-lg-6">@Html.TextBoxFor(m => m.Customer!.Phonenum, new { @class = "form-control", @type = "password" })</div>
                    </div>
                    @if (@Model.InvalidPropNames!.Contains("Phonenum"))
                    {
                        <div class="row mt-1">
                            <div class="d-none d-lg-block col-lg-3"></div>
                            <div class="col-12 col-lg-6"><i class="bi bi-exclamation-circle me-2"></i>@Html.ValidationMessageFor(m => m.Customer!.Phonenum)</div>
                        </div>
                    }
                </div>
            </div>
            <div class="card-footer bg-transparent py-3">
                <button class="btn btn-primary" type="submit">Submit</button>
            </div>
        </div>
    </div>
}