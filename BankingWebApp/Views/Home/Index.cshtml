@{
    ViewData["Title"] = "Home Page";
}

<style>
    hr{
        margin: 0.5rem 0;       
    }

    h6{
        margin-bottom: 0;
    }

    b{
        font-weight:bolder;
    }

    /* both of the below works exactly same */
    .gm-style-iw button[title="Close"] {
        /* display: none !important; */
    }

    button.gm-ui-hover-effect{
        display: none !important;
    }
</style>

<div class="container @ViewData["ShowMessage"] pt-2">
    <div class="alert alert-@ViewData["AlertType"]  alert-dismissible" role="alert">
        <i class="bi bi-info-circle me-2"></i>@ViewData["ResponseMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert">
        </button>
    </div>
</div>
<div class="container row mx-auto gap-2 pt-2 pb-4">
    <h3 class="fw-light">Locate our Branch Locations: </h3>
    <hr>
    <div>
        <div id="map" style="height: 80vh;"></div>
    </div>
</div>

@section Scripts {
    <!-- Include the Google Maps JavaScript API -->


    <script>
        //setting an array of characters intended to use for the label of the markers
        const alphabets = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        //declare global map variable which to be used on everywhere in additional to initMap() method
        let map = null;
        let count = 0;

        const bankBranches = [
            {
                position: { lat: 51.40785634278187, lng: -0.29675218001524584 },
                title: "Kingston Upon Thames - FastBank",
                location: "Located in Kingston Upon Thames",
                operatingTime: "09:00 - 17:00",
                phone: "+447745566123"
            },
            {
                position: { lat: 51.4989954985025, lng: -0.11582109991560025 },
                title: "Central London - FastBank",  
                location: "Located in Kingston Upon Thames",
                operatingTime: "09:00 - 18:00",
                phone: "+447711223334"
            },
            {
                position: { lat: 51.50968065297982, lng: -0.3060218904224092 },
                title: "Ealing - FastBank",
                location: "Located in Kingston Upon Thames",
                operatingTime: "09:00 - 15:30",
                phone: "+447733332222"
            },
            {
                position: { lat: 51.41133622965335, lng: 0.014899074168950227 },
                title: "Bromley - FastBank",
                location: "Located in Brixton",
                operatingTime: "09:00 - 16:30",
                phone: "+447799991111"
            },
            {
                position: { lat: 51.61474228028355, lng: -0.25151937991059076 },
                title: "Edgware - FastBank",
                location: "Located in Edgware",
                operatingTime: "09:00 - 18:30",
                phone: "+447723456789"
            },
            {
                position: { lat: 51.55244958656883, lng: 0.07257729361227812 },
                title: "Illford - FastBank",
                location: "Located in Illford",
                operatingTime: "09:00 - 18:30",
                phone: "+447766662345"
            }
        ];

        async function initMap() {

            //#region Initialisation of GoogleMap
            const { Map } = await google.maps.importLibrary("maps");

            let centerMapAtHome = new google.maps.LatLng(51.41702394686937, -0.21643608325841981);
            let centerMapAtLondon = new google.maps.LatLng(51.4989954985025, -0.11582109991560025);

            let mapOptions = {
                zoom: 10,
                center: centerMapAtLondon,
                mapId: "c03c281411373709"
            }

            map = new Map(document.getElementById("map"), mapOptions);

         


            //#region Placing each marker with a click Event so that we can click on it and see an additional marker pop-up
            const { InfoWindow } = await google.maps.importLibrary("maps");
            const { AdvancedMarkerElement, PinElement } = await google.maps.importLibrary("marker");

            //create an info window to share between markers
            const infoWindow = new InfoWindow();
            //places a single Marker on the map. Here, the marker is given the centreMapCoordinates
            placeMarker(centerMapAtHome, "My Home", infoWindow);
            //#endregion
            //creating the markers with their respective infoWindow(s)
            bankBranches.forEach(({ position, title, location, operatingTime, phone }, i) => {
               //creating a marker pin
                const pin = new PinElement({
                    background: "#e5002e",
                    borderColor: "#ea3156",
                    glyphColor: "#ffffff",
                    glyph: `${i + 1}`,
                    scale: 1.35,
                });

                //creating an advancedMarkerElement
                const specialMarker = new AdvancedMarkerElement({
                    position,
                    map,
                    title: `${i + 1}. ${title}`,
                    content: pin.element                
                });

                //Add a click listener for each marker and set up the info window
                specialMarker.addListener("click", ({ domEvent, latLng }) => {
                    const { target } = domEvent;
                    infoWindow.close();
                    infoWindow.setContent(
                        `<span class="fs-6 alert-link">${specialMarker.title}</span><br><hr>
                        <b class="alert-link">Location</b>: ${location} <br>
                                <b class="alert-link">Opening hours</b>: ${operatingTime} <br>
                                <b class="alert-link">Phone</b>: ${phone}`
                    );
                    infoWindow.open(specialMarker.map, specialMarker);
                });

                
            });

                 map.addListener("click", function (event) {
                    infoWindow.close();
             });
            //#endregion
        }

        initMap();

        //#region places the marker on the given position in the map
        function placeMarker(markerPosition, titleOfMarker, infoWindow) {

            const marker = createMarker(markerPosition, titleOfMarker, alphabets[count++ % alphabets.length]);

            marker.addListener("click", ({ domEvent, latLng }) => {
                const { target } = domEvent;
                infoWindow.close();
                infoWindow.setContent(
                    `<span class="fs-6 alert-link">${titleOfMarker}</span><br>
                     <b class="alert-link">User</b>: Kopil Kaiser <br>                    
                    `
                );
                infoWindow.open(marker.map, marker);
            });

            marker.setMap(map);
        }
        //#endregion       //#region Creates a google.maps.Marker element
        function createMarker(mPosition, mTitle, mLabel) {
            return new google.maps.Marker({
                position: mPosition,
                title: mTitle,
                label: mLabel,
                draggable: false,
                animation: google.maps.Animation.DROP
            });
        }
        //#endregion

 
    </script>
}
